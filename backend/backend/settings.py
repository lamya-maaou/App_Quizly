"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+%n%23vjt71f!+7x9r8ft)=juzl1h2_&7z&bt)*dr_96dfp0wo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    
    'rest_framework.authtoken',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
    'auth_app',  # l'application pour l'authentification
    'teacher_space',
    'student_space',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

# Autoriser l'embedding dans des iframes (pour le PDF)
X_FRAME_OPTIONS = 'ALLOW-FROM http://localhost:3000'  # Au lieu de 'DENY'

# Si vous utilisez django-cors-headers (pour les requêtes cross-origin)
CORS_ALLOW_ALL_ORIGINS = True  # En développement seulement
# Ou mieux, spécifiez les origines autorisées :
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Votre frontend React
]


ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
 # 'DIRS': [os.path.join(BASE_DIR, 'frontend/build')],
         'DIRS': [os.path.join(BASE_DIR, 'frontend', 'build')],
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'app_quizly',       # Nom de votre base de données
        'USER': 'root',              # Utilisateur MySQL (par défaut 'root' dans WAMP)
        'PASSWORD': '',              # Mot de passe (vide par défaut dans WAMP)
        'HOST': 'localhost',        # Ou '127.0.0.1'
        'PORT': '3306',             # Port par défaut de MySQL dans WAMP
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
            'charset': 'utf8mb4',   # Pour supporter tous les caractères Unicode
        },
    }
}
 

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

#STATIC_URL = 'static/'
STATIC_URL = '/static/'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# configure le backend pour utiliser JWT
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',

    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',

        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    
}

AUTH_USER_MODEL = 'auth_app.CustomUser'



STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend', 'build', 'static')  # ✅
]

# Remplacez la configuration SIMPLE_JWT par :
SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # Add any custom backends if you're using them
]


GEMINI_API_KEY = config('GEMINI_API_KEY')
LOGIN_REDIRECT_URL = '/after-login/' 

# Configuration optionnelle
GEMINI_CONFIG = {
    "MODEL_NAME": "gemini-1.5-pro-latest",
    "RATE_LIMIT_DELAY": 1,  # secondes entre les requêtes
    "DEFAULT_QUESTION_COUNT": 3,
    "MAX_RETRIES": 3
}
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')